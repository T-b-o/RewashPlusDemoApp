@using Microsoft.AspNetCore.Components.Routing
@inherits LayoutComponentBase

<div class="rewash-layout">
    <!-- Desktop Sidebar -->
    <div class="sidebar @(isCollapsed ? "collapsed" : "")">
        <div class="logo">
            <span class="logo-text">R+</span>
            <button class="collapse-btn" @onclick="ToggleCollapse">
                <i class="fas @(isCollapsed ? "fa-angle-right" : "fa-angle-left")"></i>
            </button>
        </div>

        <ul class="nav-links">
            @foreach (var link in UserLinks)
            {
                <li>
                    <NavLink class="nav-item" href="@link.Href" Match="@link.Match">
                        <i class="@link.Icon"></i>
                        <span>@link.Label</span>
                    </NavLink>
                </li>
            }
        </ul>

        <hr />

        <ul class="nav-links admin-links">
            @foreach (var link in AdminLinks)
            {
                <li>
                    <NavLink class="nav-item" href="@link.Href" Match="@link.Match">
                        <i class="@link.Icon"></i>
                        <span>@link.Label</span>
                    </NavLink>
                </li>
            }
        </ul>
    </div>

    <!-- Mobile Top Bar -->
    <div class="mobile-nav">
        <div class="mobile-header">
            <span class="logo-text">Rewash+</span>
            <button class="menu-btn" @onclick="ToggleMobileMenu">
                <i class="fas @(isMobileMenuOpen ? "fa-times" : "fa-bars")"></i>
            </button>
        </div>
    </div>

    <!-- Mobile Backdrop -->
    <div class="mobile-backdrop @(isMobileMenuOpen ? "open" : "")" @onclick="ToggleMobileMenu"></div>

    <!-- Mobile Slide-Over Menu -->
    <div class="mobile-overlay @(isMobileMenuOpen ? "open" : "")">
        <ul class="mobile-links">
            @foreach (var link in UserLinks)
            {
                <li>
                    <NavLink class="nav-item" href="@link.Href" Match="@link.Match" @onclick="ToggleMobileMenu">
                        <i class="@link.Icon"></i>
                        <span>@link.Label</span>
                    </NavLink>
                </li>
            }
            <hr />
            @foreach (var link in AdminLinks)
            {
                <li>
                    <NavLink class="nav-item" href="@link.Href" Match="@link.Match" @onclick="ToggleMobileMenu">
                        <i class="@link.Icon"></i>
                        <span>@link.Label</span>
                    </NavLink>
                </li>
            }
        </ul>
    </div>

    <!-- Page Content -->
    <div class="main-content
                @(isMobileMenuOpen ? "shifted" : "")
                @(isCollapsed ? "desktop-collapsed" : "")">
        @Body
    </div>
</div>

@code {
    private bool isCollapsed = false;
    private bool isMobileMenuOpen = false;

    private List<(string Label, string Icon, string Href, NavLinkMatch Match)> UserLinks = new()
    {
        ("Home", "fas fa-house", "/", NavLinkMatch.All),
        ("Book a Wash", "fas fa-calendar-plus", "/book", NavLinkMatch.Prefix),
        ("My Bookings", "fas fa-list", "/my-bookings", NavLinkMatch.Prefix),
        ("Payments", "fas fa-credit-card", "/payments", NavLinkMatch.Prefix),
        ("Notifications", "fas fa-bell", "/notifications", NavLinkMatch.Prefix),
        ("Profile", "fas fa-user", "/profile", NavLinkMatch.Prefix)
    };

    private List<(string Label, string Icon, string Href, NavLinkMatch Match)> AdminLinks = new()
    {
        ("Dashboard", "fas fa-tachometer-alt", "/admin/dashboard", NavLinkMatch.Prefix),
        ("Manage Bookings", "fas fa-calendar-check", "/admin/manage-bookings", NavLinkMatch.Prefix),
        ("Manage Payments", "fas fa-wallet", "/admin/manage-payments", NavLinkMatch.Prefix),
        ("Users", "fas fa-users", "/admin/users", NavLinkMatch.Prefix),
        ("Reports", "fas fa-chart-line", "/admin/reports", NavLinkMatch.Prefix),
        ("Settings", "fas fa-cogs", "/admin/settings", NavLinkMatch.Prefix)
    };

    private void ToggleCollapse() => isCollapsed = !isCollapsed;
    private void ToggleMobileMenu() => isMobileMenuOpen = !isMobileMenuOpen;
}
